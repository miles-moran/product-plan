[{"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\index.js":"1","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\reportWebVitals.js":"2","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\App.js":"3","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\Modal.js":"4","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\Constants.js":"5","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\DragButton.js":"6","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\DropZone.js":"7","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\Lane.js":"8","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\data\\modals.js":"9","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\constants.js":"10","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\BarZone.js":"11"},{"size":500,"mtime":1607238276565,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607238276565,"results":"14","hashOfConfig":"13"},{"size":2749,"mtime":1610669090664,"results":"15","hashOfConfig":"13"},{"size":452,"mtime":1610667119575,"results":"16","hashOfConfig":"13"},{"size":66,"mtime":1610666327157,"results":"17","hashOfConfig":"13"},{"size":589,"mtime":1610667106789,"results":"18","hashOfConfig":"13"},{"size":743,"mtime":1610668080631,"results":"19","hashOfConfig":"13"},{"size":413,"mtime":1610668322020,"results":"20","hashOfConfig":"13"},{"size":929,"mtime":1610667188743,"results":"21","hashOfConfig":"13"},{"size":66,"mtime":1610666327157,"results":"22","hashOfConfig":"13"},{"size":505,"mtime":1610668888760,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1v527qc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\index.js",[],["53","54"],"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\reportWebVitals.js",[],"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\App.js",["55"],"import Modal from \"./components/Modal\";\nimport { useState, useEffect } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport DragButton from \"./components/DragButton\";\nimport DropZone from \"./components/DropZone\";\nimport Lane from \"./components/Lane\";\nimport { modals } from \"./data/modals\";\nconst App = () => {\n  const [modal, setModal] = useState(null);\n  const [lanes, setLanes] = useState([\n    {\n      title: \"first\",\n      id: 0,\n      bars: [],\n    },\n  ]);\n  // useEffect(() => {\n  //   setTimeout(() => setModal(1), 1000);\n  // }, []);\n  const addLane = () => {\n    setLanes([\n      ...lanes,\n      {\n        title: \"First\",\n        id: lanes.length,\n        bars: [],\n      },\n    ]);\n  };\n  const addBar = (i) => {\n    const l = [...lanes];\n    l[i].bars.push({ title: \"Roadmap item \" + (l[i].bars.length + 1) });\n    setLanes(l);\n  };\n  const handleSubmit = () => {\n    setModal(null);\n  };\n  return (\n    <div>\n      <div id=\"nav\" className=\"flex\">\n        <div id=\"logo\" className=\"flex center\">\n          Product Plan\n        </div>\n        <div className=\"flex space-between center grow\">\n          <div>Candidate Roadmap</div>\n          <div>Search</div>\n        </div>\n      </div>\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"flex space-between\">\n          <div className=\"flex grow column\">\n            <div id=\"nav-secondary\" className=\"flex space-between\">\n              <div id=\"product-roadmap-header\" className=\"flex bottom\">\n                Product Roadmap\n              </div>\n              <div id=\"tabs\" className=\"flex bottom\">\n                <div className=\"tab selectable selected\">Roadmap</div>\n                <div className=\"tab selectable\">Planning Board</div>\n                <div className=\"tab selectable\">Parking</div>\n              </div>\n            </div>\n            <div id=\"board\" className=\"flex grow column\">\n              <div className=\"flex space-between\">\n                <div>2018</div>\n                <div>Q1 2019</div>\n                <div>Q2</div>\n                <div>Q3</div>\n                <div>Q4</div>\n              </div>\n\n              {lanes.map((lane) => (\n                <Lane lane={lane} addBar={addBar} />\n              ))}\n\n              <DropZone type={\"LANE\"} add={addLane} />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"side-nav-container\">\n              <DragButton text={\"Add lane\"} type={\"LANE\"} />\n              <DragButton text={\"Add bar\"} type={\"BAR\"} />\n            </div>\n          </div>\n        </div>\n      </DndProvider>\n      {modal && <Modal handleSubmit={handleSubmit} modal={modals[modal]} />}\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\Modal.js",["56"],"export default ({ handleSubmit, modal }) => {\r\n  return (\r\n    <div className=\"modal shadow flex center\">\r\n      <div>\r\n        <div className=\"sample-drag-zone\"></div>\r\n        <div className=\"modal-header\">{modal.header}</div>\r\n        <div className=\"modal-description\">\r\n        {modal.description}\r\n        </div>\r\n        <span className=\"modal-submit selectable\" onClick={handleSubmit}>{modal.submit}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\Constants.js",[],"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\DragButton.js",[],"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\DropZone.js",["57"],"import React from \"react\";\r\nimport { ItemTypes } from \"../constants\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\n\r\nfunction DropZone({children, type, add, index}) {\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes[type],\r\n    drop: () => add(index),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div ref={drop} className=\"dropzone\">\r\n      {isOver && (\r\n        <div\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            zIndex: 1,\r\n            backgroundColor: \"white\",\r\n            border: \"2px dashed #e4e6e8\",\r\n            borderRadius: \"5px\"\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\Lane.js",["58"],"import BarZone from \"./BarZone\";\r\nexport default ({ lane, addBar }) => {\r\n  return (\r\n    <div className=\"lane\">\r\n      <div className=\"lane-header\">Lane</div>\r\n      <BarZone type={\"BAR\"} add={() => addBar(lane.id)}>\r\n        <div className=\"bars\">\r\n          {lane.bars.map((bar) => (\r\n            <span className=\"bar\">{bar.title}</span>\r\n          ))}\r\n        </div>\r\n      </BarZone>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\data\\modals.js",[],"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\constants.js",[],"C:\\Users\\Miles Moran\\Desktop\\challenges\\productplan\\src\\components\\BarZone.js",["59"],"import React from \"react\";\r\nimport { ItemTypes } from \"../constants\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\n\r\nfunction DropZone({ children, type, add, index }) {\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes[type],\r\n    drop: () => add(index),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div ref={drop} className={isOver ? \"isOver barzone\": 'barzone'}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropZone;\r\n",["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":20,"nodeType":"68","messageId":"69","endLine":2,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":1,"column":1,"nodeType":"72","endLine":14,"endColumn":3},{"ruleId":"66","severity":1,"message":"73","line":3,"column":19,"nodeType":"68","messageId":"69","endLine":3,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":2,"column":1,"nodeType":"72","endLine":15,"endColumn":3},{"ruleId":"66","severity":1,"message":"73","line":3,"column":19,"nodeType":"68","messageId":"69","endLine":3,"endColumn":26},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useDrag' is defined but never used.",["76"],["77"],"no-global-assign","no-unsafe-negation"]